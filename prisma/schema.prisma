// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  username      String
  email         String   @unique
  emailVerified Boolean  @default(false)
  role          String
  password      String
  image         String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  courses       Course[]
}

model Course {
  id             String       @id @default(cuid())
  userId         String
  user           User         @relation(fields: [userId], references: [id])
  title          String
  description    String
  imageUrl       String
  price          Float
  oldPrice       Float?
  vote           Float
  bestSeller     Boolean?
  categoryId     String
  courseCategory Category     @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  attachments    Attachment[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@index([categoryId])
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String
  courses     Course[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Attachment {
  id        String   @id @default(cuid())
  name      String
  url       String
  courseId  String
  course    Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([courseId])
}
